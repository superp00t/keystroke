package keystroke

func (k Key) String() string {
	switch k {
	case BACKSPACE:
		return "Backspace"
	case TAB:
		return "Tab"
	case ENTER:
		return "Enter"
	case SHIFT:
		return "Shift"
	case CTRL:
		return "Ctrl"
	case ALT:
		return "Alt"
	case PAUSE_BREAK:
		return "PauseBreak"
	case CAPS_LOCK:
		return "CapsLock"
	case ESCAPE:
		return "Escape"
	case SPACE:
		return "Space"
	case PAGE_UP:
		return "PageUp"
	case PAGE_DOWN:
		return "PageDown"
	case END:
		return "End"
	case HOME:
		return "Home"
	case LEFT_ARROW:
		return "LeftArrow"
	case UP_ARROW:
		return "UpArrow"
	case RIGHT_ARROW:
		return "RightArrow"
	case DOWN_ARROW:
		return "DownArrow"
	case INSERT:
		return "Insert"
	case DELETE:
		return "Delete"
	case N0:
		return "N0"
	case N1:
		return "N1"
	case N2:
		return "N2"
	case N3:
		return "N3"
	case N4:
		return "N4"
	case N5:
		return "N5"
	case N6:
		return "N6"
	case N7:
		return "N7"
	case N8:
		return "N8"
	case N9:
		return "N9"
	case A:
		return "A"
	case B:
		return "B"
	case C:
		return "C"
	case D:
		return "D"
	case E:
		return "E"
	case F:
		return "F"
	case G:
		return "G"
	case H:
		return "H"
	case I:
		return "I"
	case J:
		return "J"
	case K:
		return "K"
	case L:
		return "L"
	case M:
		return "M"
	case N:
		return "N"
	case O:
		return "O"
	case P:
		return "P"
	case Q:
		return "Q"
	case R:
		return "R"
	case S:
		return "S"
	case T:
		return "T"
	case U:
		return "U"
	case V:
		return "V"
	case W:
		return "W"
	case X:
		return "X"
	case Y:
		return "Y"
	case Z:
		return "Z"
	case LEFT_WINDOW_KEY:
		return "LeftWindowKey"
	case RIGHT_WINDOW_KEY:
		return "RightWindowKey"
	case SELECT_KEY:
		return "SelectKey"
	case NUMPAD_0:
		return "Numpad0"
	case NUMPAD_1:
		return "Numpad1"
	case NUMPAD_2:
		return "Numpad2"
	case NUMPAD_3:
		return "Numpad3"
	case NUMPAD_4:
		return "Numpad4"
	case NUMPAD_5:
		return "Numpad5"
	case NUMPAD_6:
		return "Numpad6"
	case NUMPAD_7:
		return "Numpad7"
	case NUMPAD_8:
		return "Numpad8"
	case NUMPAD_9:
		return "Numpad9"
	case MULTIPLY:
		return "Multiply"
	case ADD:
		return "Add"
	case NUMPAD_SUBTRACT:
		return "NumpadSubtract"
	case DECIMAL_POINT:
		return "DecimalPoint"
	case DIVIDE:
		return "Divide"
	case F1:
		return "F1"
	case F2:
		return "F2"
	case F3:
		return "F3"
	case F4:
		return "F4"
	case F5:
		return "F5"
	case F6:
		return "F6"
	case F7:
		return "F7"
	case F8:
		return "F8"
	case F9:
		return "F9"
	case F10:
		return "F10"
	case F11:
		return "F11"
	case F12:
		return "F12"
	case F13:
		return "F13"
	case F14:
		return "F14"
	case F15:
		return "F15"
	case F16:
		return "F16"
	case F17:
		return "F17"
	case F18:
		return "F18"
	case F19:
		return "F19"
	case F20:
		return "F20"
	case F21:
		return "F21"
	case F22:
		return "F22"
	case F23:
		return "F23"
	case F24:
		return "F24"
	case NUM_LOCK:
		return "NumLock"
	case SCROLL_LOCK:
		return "ScrollLock"
	case VOLUME_MUTE:
		return "VolumeMute"
	case VOLUME_DOWN:
		return "VolumeDown"
	case VOLUME_UP:
		return "VolumeUp"
	case SEMI_COLON:
		return "SemiColon"
	case EQUAL_SIGN:
		return "EqualSign"
	case COMMA:
		return "Comma"
	case SUBTRACT:
		return "Subtract"
	case PERIOD:
		return "Period"
	case FORWARD_SLASH:
		return "ForwardSlash"
	case GRAVE_ACCENT:
		return "GraveAccent"
	case OPEN_BRACKET:
		return "OpenBracket"
	case BACKSLASH:
		return "Backslash"
	case CLOSEBRACKET:
		return "Closebracket"
	case SINGLE_QUOTE:
		return "SingleQuote"
	default:
		return "Unknown"
	}
}
